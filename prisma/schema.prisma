// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
  binaryTargets = ["native", "windows", "darwin-arm64"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String
  email         String    @unique
  password      String
  userType      UserType
  phoneNumber   String?
  dateOfBirth   DateTime?
  familyCode    String?
  parentEmail   String?
  parentPhone   String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  family        Family?   @relation(fields: [familyCode], references: [code])
  children      User[]    @relation("ParentChild")
  parent        User?     @relation("ParentChild", fields: [parentEmail], references: [email])
  posts         ForumPost[]
  replies       ForumReply[]
}

model Family {
  code      String   @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  members   User[]
}

model ForumSection {
  id          String      @id @default(cuid())
  name        String
  description String
  type        SectionType
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  posts       ForumPost[]
}

model ForumPost {
  id          String      @id @default(cuid())
  title       String
  content     String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  author      User        @relation(fields: [authorId], references: [id])
  authorId    String
  section     ForumSection @relation(fields: [sectionId], references: [id])
  sectionId   String
  replies     ForumReply[]
}

model ForumReply {
  id        String    @id @default(cuid())
  content   String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  author    User      @relation(fields: [authorId], references: [id])
  authorId  String
  post      ForumPost @relation(fields: [postId], references: [id])
  postId    String
}

enum UserType {
  PARENT
  CHILD
  INDEPENDENT_CHILD
}

enum SectionType {
  PARENTS_ONLY
  TEENS_ONLY
  BOTH
}
