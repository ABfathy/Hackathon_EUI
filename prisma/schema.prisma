generator client {
  provider      = "prisma-client-js"
  output        = "../lib/generated/prisma"
  binaryTargets = ["native", "windows", "darwin-arm64"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id          String       @id @default(cuid())
  name        String
  email       String       @unique
  password    String
  userType    UserType
  phoneNumber String?
  dateOfBirth DateTime?
  familyCode  String?
  parentEmail String?
  parentPhone String?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  posts       ForumPost[]
  replies     ForumReply[]
  incidents   Incident[]
  family      Family?      @relation(fields: [familyCode], references: [code])
  parent      User?        @relation("ParentChild", fields: [parentEmail], references: [email])
  children    User[]       @relation("ParentChild")
}

model Family {
  code      String   @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  alerts    Alert[]
  members   User[]
}

model ForumSection {
  id          String      @id @default(cuid())
  name        String
  description String
  type        SectionType
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  posts       ForumPost[]
}

model ForumPost {
  id        String       @id @default(cuid())
  title     String
  content   String
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  authorId  String
  sectionId String
  author    User         @relation(fields: [authorId], references: [id])
  section   ForumSection @relation(fields: [sectionId], references: [id])
  replies   ForumReply[]
}

model ForumReply {
  id        String    @id @default(cuid())
  content   String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  authorId  String
  postId    String
  author    User      @relation(fields: [authorId], references: [id])
  post      ForumPost @relation(fields: [postId], references: [id])
}

model Incident {
  id          String       @id @default(cuid())
  type        IncidentType
  location    String
  latitude    Float?
  longitude   Float?
  ipAddress   String?
  description String
  name        String?
  contact     String?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  reporterId  String?
  alert       Alert?
  reporter    User?        @relation(fields: [reporterId], references: [id])
}

model Alert {
  id         String   @id @default(cuid())
  incidentId String   @unique
  familyId   String?
  isResolved Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  family     Family?  @relation(fields: [familyId], references: [code])
  incident   Incident @relation(fields: [incidentId], references: [id])
}

enum SectionType {
  PARENTS_ONLY
  TEENS_ONLY
  BOTH
}

enum IncidentType {
  PHYSICAL_ABUSE
  EMOTIONAL_ABUSE
  SEXUAL_ABUSE
  NEGLECT
  OTHER
}

enum UserType {
  PARENT
  CHILD
  INDEPENDENT_CHILD
}
